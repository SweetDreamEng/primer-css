// Layout utilities
// stylelint-disable block-opening-brace-space-before, primer/selector-no-utility, comment-empty-line-before

@warn "Responsive position utilities will be moved from primer-marketing-utilities to primer-utilities in primer v11.0.0.";

// Responsive position utilities

@each $breakpoint in map-keys($breakpoints) {
  @include breakpoint($breakpoint) {
    /* Set position to relative */
    .position-#{$breakpoint}-relative { position: relative !important; }
    /* Set position to absolute */
    .position-#{$breakpoint}-absolute { position: absolute !important; }
    /* Set position to fixed */
    .position-#{$breakpoint}-fixed    { position: fixed !important; }
  }
}

// Absolutely position content
@for $i from 1 through length($allSpacers) {
  $size: #{nth($allSpacers, $i)};
  $scale: #{$i - 1};
  .top-#{$scale} { top: #{$size} !important; }
  .right-#{$scale} { right: #{$size} !important; }
  .bottom-#{$scale} { bottom: #{$size} !important; }
  .left-#{$scale} { left: #{$size} !important; }
  .top-n#{$scale} { top: -#{$size} !important; }
  .right-n#{$scale} { right: -#{$size} !important; }
  .bottom-n#{$scale} { bottom: -#{$size} !important; }
  .left-n#{$scale} { left: -#{$size} !important; }
}

// Responsive absolute position values
@each $breakpoint in map-keys($breakpoints) {
  // Loop through the spacer values
  @for $i from 1 through length($allSpacers) {
    @include breakpoint($breakpoint) {
      $size: #{nth($allSpacers, $i)}; // sm, md, lg, xl
      $scale: #{$i - 1};
      .top-#{$breakpoint}-#{$scale} { top: #{$size} !important; }
      .right-#{$breakpoint}-#{$scale} { right: #{$size} !important; }
      .bottom-#{$breakpoint}-#{$scale} { bottom: #{$size} !important; }
      .left-#{$breakpoint}-#{$scale} { left: #{$size} !important; }
      .top-#{$breakpoint}-n#{$scale} { top: -#{$size} !important; }
      .right-#{$breakpoint}-n#{$scale} { right: -#{$size} !important; }
      .bottom-#{$breakpoint}-n#{$scale} { bottom: -#{$size} !important; }
      .left-#{$breakpoint}-n#{$scale} { left: -#{$size} !important; }
    }
  }
}
