name: Release
on:
  push:
    branches:
      - 'main'
      - '!dependabot/**'
    # Don't release when these paths change
    # It's not necessary because we don't ship them and it creates noise
    paths-ignore:
      - '.storybook/**'
      - 'docs/**'
      - 'lib/**'
      - 'script/**'
      - 'static/**'
      - 'next.config.js'
      - 'now.json'

jobs:
  release:
    if: ${{ github.repository == 'primer/css' }}

    name: Final
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@master
        with:
          node-version: 12.x

      - name: Install dependencies
        run: yarn

      - name: Create release pull request or publish to npm
        id: changesets
        uses: changesets/action@master
        with:
          title: Release Tracking
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN_SHARED }}

      - name: Create .npmrc
        if: steps.changesets.outputs.published == 'false'
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN_SHARED }}

      - name: Publish release candidate
        if: steps.changesets.outputs.published == 'false'
        run: |
          version=$(jq -r .version package.json)
          echo "$( jq ".version = \"$(echo $version)-rc.$(echo $GITHUB_SHA)\"" package.json )" > package.json
          yarn publish --tag next
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output release candidate number
        if: steps.changesets.outputs.published == 'false'
        uses: actions/github-script@v3
        with:
          script: |
            const package = require(`${process.env.GITHUB_WORKSPACE}/package.json`)
            github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              context: `Published ${package.name}`,
              description: package.version,
              target_url: `https://unpkg.com/${package.name}@${package.version}/`
            })
