name: Deploy
on:
  push:
    branches-ignore:
      - main
    paths:
      - 'src/**'
      - 'docs/**'
      - '.github/workflows/deploy*.yml'
      - 'package.json'
jobs:
  deploy-preview:
    if: ${{ github.repository == 'primer/css' }}
    name: Preview
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/github-script@v3
        name: Cancel existing deployments
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const deployments = await github.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
              transient_environment: true,
              environment: 'preview',
              description: 'Deploying preview docs site.'
            })
            console.log(deployments)
      # - uses: actions/github-script@v3
      #   name: Create GitHub deployment
      #   id: deployment
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     environment: Preview

      # - name: Vercel Action
      #   uses: amondnet/vercel-action@v20.0.0
      #   id: vercel-action
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     vercel-token: ${{ secrets.VERCEL_TOKEN_SHARED }}
      #     github-comment: false
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID_SHARED }}
      #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

      # - name: Update deployment status (success)
      #   if: success()
      #   uses: chrnorm/deployment-status@releases/v1
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     environment_url: ${{ steps.vercel-action.outputs.preview-url }}
      #     state: "success"
      #     deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      # - name: Update deployment status (failure)
      #   if: failure()
      #   uses: chrnorm/deployment-status@releases/v1
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     state: "failure"
      #     deployment_id: ${{ steps.deployment.outputs.deployment_id }}
