// stylelint-disable block-opening-brace-space-before

// Text colors
.color-text-primary   { color: var(--color-text-primary) !important; }
.color-text-secondary { color: var(--color-text-secondary) !important; }
.color-text-tertiary  { color: var(--color-text-tertiary) !important; }
.color-text-link      { color: var(--color-text-link) !important; }
.color-text-success   { color: var(--color-text-success) !important; }
.color-text-warning   { color: var(--color-text-warning) !important; }
.color-text-danger    { color: var(--color-text-danger) !important; }
.color-text-inverse   { color: var(--color-text-inverse) !important; }
.color-text-white     { color: var(--color-text-white) !important; }

// Icon colors
.color-icon-primary   { color: var(--color-icon-primary) !important; } // stylelint-disable-line primer/colors
.color-icon-secondary { color: var(--color-icon-secondary) !important; } // stylelint-disable-line primer/colors
.color-icon-tertiary  { color: var(--color-icon-tertiary) !important; } // stylelint-disable-line primer/colors
.color-icon-info      { color: var(--color-icon-info) !important; } // stylelint-disable-line primer/colors
.color-icon-danger    { color: var(--color-icon-danger) !important; } // stylelint-disable-line primer/colors
.color-icon-success   { color: var(--color-icon-success) !important; } // stylelint-disable-line primer/colors
.color-icon-warning   { color: var(--color-icon-warning) !important; } // stylelint-disable-line primer/colors

// Border colors
.color-border-primary   { border-color: var(--color-border-primary) !important; }
.color-border-secondary { border-color: var(--color-border-secondary) !important; }
.color-border-tertiary  { border-color: var(--color-border-tertiary) !important; }
.color-border-overlay   { border-color: var(--color-border-overlay) !important; }
.color-border-inverse   { border-color: var(--color-border-inverse) !important; }
.color-border-info      { border-color: var(--color-border-info) !important; }
.color-border-success   { border-color: var(--color-border-success) !important; }
.color-border-danger    { border-color: var(--color-border-danger) !important; }
.color-border-warning   { border-color: var(--color-border-warning) !important; }

// Background colors
.color-bg-canvas          { background-color: var(--color-bg-canvas) !important; }
.color-bg-canvas-inverse  { background-color: var(--color-bg-canvas-inverse) !important; }
.color-bg-canvas-inset    { background-color: var(--color-bg-canvas-inset) !important; }
.color-bg-primary         { background-color: var(--color-bg-primary) !important; }
.color-bg-secondary       { background-color: var(--color-bg-secondary) !important; }
.color-bg-tertiary        { background-color: var(--color-bg-tertiary) !important; }
.color-bg-overlay         { background-color: var(--color-bg-overlay) !important; }
.color-bg-info            { background-color: var(--color-bg-info) !important; }
.color-bg-info-inverse    { background-color: var(--color-bg-info-inverse) !important; }
.color-bg-danger          { background-color: var(--color-bg-danger) !important; }
.color-bg-danger-inverse  { background-color: var(--color-bg-danger-inverse) !important; }
.color-bg-success         { background-color: var(--color-bg-success) !important; }
.color-bg-success-inverse { background-color: var(--color-bg-success-inverse) !important; }
.color-bg-warning         { background-color: var(--color-bg-warning) !important; }
.color-bg-warning-inverse { background-color: var(--color-bg-warning-inverse) !important; }

//
// ------------------------ Deprecated ------------------------
// Some might get replaced at some point. If possible, use functional classes.
//

// Color utilities

// background colors
.bg-white         { background-color: var(--color-bg-primary) !important; }
.bg-blue          { background-color: var(--color-bg-info-inverse) !important; }
.bg-blue-light    { background-color: var(--color-bg-info) !important; }
.bg-gray-dark     { background-color: var(--color-bg-canvas-inverse) !important; }
.bg-gray          { background-color: var(--color-bg-tertiary) !important; }
.bg-gray-light    { background-color: var(--color-bg-secondary) !important; }
.bg-green         { background-color: var(--color-bg-success-inverse) !important; }
.bg-green-light   { background-color: var(--color-bg-success) !important; }
.bg-red           { background-color: var(--color-bg-danger-inverse) !important; }
.bg-red-light     { background-color: var(--color-bg-danger) !important; }
.bg-yellow        { background-color: var(--color-bg-warning-inverse) !important; }
.bg-yellow-light  { background-color: var(--color-bg-warning) !important; }
.bg-yellow-dark   { background-color: $bg-yellow-dark !important; }
.bg-purple        { background-color: $bg-purple !important; }
.bg-pink          { background-color: $bg-pink !important; }
.bg-purple-light  { background-color: $bg-purple-light !important; }
.bg-orange        { background-color: $bg-orange !important; }

// Generate a foreground and background utility for every shade of every hue
@each $hue, $shades in $hue-maps {
  @each $index, $color in $shades {
    .color-#{$hue}-#{$index} { color: $color !important; }
    .bg-#{$hue}-#{$index} { background-color: $color !important; }
  }
}

// text colors
.text-blue          { color: var(--color-text-link) !important; }
.text-red           { color: var(--color-text-danger) !important; }
.text-gray-light    { color: var(--color-text-tertiary) !important; }
.text-gray          { color: var(--color-text-secondary) !important; }
.text-gray-dark     { color: var(--color-text-primary) !important; }
.text-green         { color: var(--color-text-success) !important; }
.text-yellow        { color: var(--color-text-warning) !important; }
.text-orange        { color: $text-orange !important; }
.text-orange-light  { color: $text-orange-light !important; }
.text-purple        { color: $text-purple !important; }
.text-pink          { color: $text-pink !important; }
.text-white         { color: var(--color-text-white) !important; }

.text-inherit       { color: inherit !important; } // TODO: Should this be moved to primer/primitives

// Border colors
.border-blue        { border-color: var(--color-border-info) !important; }
.border-blue-light  { border-color: $border-blue-light !important; }
.border-green       { border-color: var(--color-border-success) !important; }
.border-green-light { border-color: var(--color-discussion-border) !important; }
.border-red         { border-color: var(--color-border-danger) !important; }
.border-red-light   { border-color: $border-red-light !important; }
.border-purple      { border-color: $border-purple !important; }
.border-yellow      { border-color: var(--color-border-warning) !important; }
.border-gray-light  { border-color: var(--color-border-secondary) !important; }
.border-gray-dark   { border-color: var(--color-border-tertiary) !important; }

.border-black-fade  { border-color: $border-black-fade !important; }
.border-white-fade  { border-color: $border-white-fade !important; }

.border-white-fade-15 { border-color: $border-white-fade !important; }
.border-white-fade-30 { border-color: $white-fade-30 !important; } // stylelint-disable-line primer/borders
.border-white-fade-50 { border-color: $white-fade-50 !important; } // stylelint-disable-line primer/borders
.border-white-fade-70 { border-color: $white-fade-70 !important; } // stylelint-disable-line primer/borders
.border-white-fade-85 { border-color: $white-fade-85 !important; } // stylelint-disable-line primer/borders

/* Typography colors */

.lead {
  color: var(--color-text-secondary);
}

.text-emphasized {
  color: var(--color-text-primary);
}

.text-shadow-dark {
  text-shadow: 0 1px 1px rgba($black, 0.25), 0 1px 25px rgba($black, 0.75);
}

.text-shadow-light {
  text-shadow: 0 1px 0 rgba($white, 0.5);
}
