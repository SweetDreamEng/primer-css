// stylelint-disable selector-max-type, block-opening-brace-space-before, no-duplicate-selectors

// Base button styles
.btn {
  position: relative;
  display: inline-block;
  // stylelint-disable-next-line primer/spacing
  padding: 5px $spacer-3;
  font-size: $body-font-size;
  font-weight: $font-weight-semibold;
  // stylelint-disable-next-line primer/typography
  line-height: 20px; // Specifically not inherit our `<body>` default
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  border: $border-width $border-style;
  border-radius: $border-radius;
  appearance: none; // Corrects inability to style clickable `input` types in iOS.

  &:hover {
    text-decoration: none;
  }

  &:disabled,
  &.disabled,
  &[aria-disabled=true] {
    cursor: default;

    .octicon {
      color: inherit;
    }
  }

  i {
    font-style: normal;
    font-weight: $font-weight-semibold;
    opacity: 0.75;
  }

  .octicon {
    margin-right: $spacer-1;
    color: var(--color-text-tertiary);
    vertical-align: text-bottom;

    &:only-child {
      margin-right: 0;
    }
  }

  .Counter {
    // stylelint-disable-next-line primer/spacing
    margin-left: 2px;
    color: inherit;
    text-shadow: none;
    vertical-align: top;
    background-color: var(--color-btn-counter-bg);
  }

  .dropdown-caret {
    margin-left: $spacer-1;
    opacity: 0.8;
  }
}

// Default button

.btn {
  color: var(--color-text-primary);
  background-color: var(--color-btn-bg);
  border-color: var(--color-btn-border);
  box-shadow: var(--color-shadow-small), var(--color-shadow-highlight);
  transition: background-color 0.2s cubic-bezier(0.3, 0, 0.5, 1);

  &:hover,
  &.hover,
  [open] > & {
    background-color: var(--color-btn-bg-hover);
    transition-duration: 0.1s;
  }

  &:active,
  &.selected,
  &[aria-selected=true] {
    background-color: var(--color-btn-bg-active);
    box-shadow: var(--color-shadow-inset);
    transition: none;
  }

  &:disabled,
  &.disabled,
  &[aria-disabled=true] {
    color: var(--color-text-disabled);
    background-color: var(--color-btn-bg);
    border-color: var(--color-btn-border);
  }

  // Keep :focus after :disabled. Allows to see the focus ring even on disabled buttons
  &:focus,
  &.focus {
    outline: 1px dotted transparent; // Support Firfox custom colors
    outline-offset: 2px;
    box-shadow: var(--color-shadow-focus);
  }
}

// Primary button

.btn-blue, // TODO: deprecate
.btn-primary {
  color: var(--color-text-inverse);
  background-color: var(--color-btn-primary-bg);
  border-color: var(--color-btn-primary-border);
  box-shadow: var(--color-btn-primary-shadow), var(--color-btn-primary-shadow-highlight);

  &:hover,
  &.hover,
  [open] > & {
    background-color: var(--color-btn-primary-bg-hover);
  }

  &:active,
  &.selected,
  &[aria-selected=true] {
    background-color: var(--color-btn-primary-bg-active);
    box-shadow: var(--color-btn-primary-shadow-selected);
  }

  &:disabled,
  &.disabled,
  &[aria-disabled=true] {
    color: var(--color-btn-primary-disabled-text);
    background-color: var(--color-btn-primary-bg-disabled);
    border-color: var(--color-btn-primary-border-disabled);
    box-shadow: var(--color-btn-primary-shadow);
  }

  &:focus,
  &.focus {
    box-shadow: var(--color-btn-primary-disabled-shadow);
  }

  .Counter {
    color: inherit;
    background-color: var(--color-btn-primary-counter-bg);
  }

  .octicon {
    // stylelint-disable-next-line primer/colors
    color: var(--color-btn-primary-ic);
  }
}

// Mixin: btn-inverse-on-hover

@mixin btn-inverse-on-hover($type) {
  color: var(--color-btn-#{$type}-text);
  transition: none;

  &:hover,
  [open] > & {
    color: var(--color-text-inverse);
    background-color: var(--color-btn-#{$type}-bg-hover); // stylelint-disable-line primer/no-undefined-vars
    border-color: var(--color-btn-inverse-on-hover-border);
    box-shadow: var(--color-btn-inverse-on-hover-shadow), var(--color-btn-inverse-on-hover-shadow-inset);

    .Counter {
      background-color: var(--color-btn-inverse-on-hover-counter-bg);
    }

    .octicon {
      color: inherit;
    }
  }

  &:active,
  &.selected,
  &[aria-selected=true] {
    color: var(--color-text-inverse);
    background-color: var(--color-btn-#{$type}-bg-active); // stylelint-disable-line primer/no-undefined-vars
    border-color: var(--color-btn-inverse-on-hover-border);
    box-shadow: var(--color-btn-#{$type}-shadow); // stylelint-disable-line primer/no-undefined-vars
  }

  &:disabled,
  &.disabled,
  &[aria-disabled=true] {
    color: var(--color-btn-#{$type}-text-disabled); // stylelint-disable-line primer/no-undefined-vars
    background-color: var(--color-bg-tertiary);
    border-color: var(--color-btn-border);
    box-shadow: var(--color-shadow-small), var(--color-shadow-highlight);

    .Counter {
      background-color: var(--color-btn-#{$type}-counter-bg-disabled); // stylelint-disable-line primer/no-undefined-vars
    }
  }

  &:focus {
    box-shadow: var(--color-btn-#{$type}-shadow-focus); // stylelint-disable-line primer/no-undefined-vars
  }

  .Counter {
    color: inherit;
    background-color: var(--color-btn-#{$type}-counter-bg); // stylelint-disable-line primer/no-undefined-vars
  }
}

// Danger button

.btn-danger {
  @include btn-inverse-on-hover("danger");
}

// Outline button

.btn-outline {
  @include btn-inverse-on-hover("outline");
}

// Sizes
//
// Tweak `line-height` to make them smaller.
.btn-sm {
  // stylelint-disable-next-line primer/spacing
  padding: 3px 12px;
  font-size: $font-size-small;
  // stylelint-disable-next-line primer/typography
  line-height: 20px;

  .octicon {
    vertical-align: text-top;
  }
}

// Large button adds more padding around text. Use font-size utils to increase font-size.. e.g, <p class="text-gamma"><button class="btn btn-large btn-primary" type="button">Big green button</button></p>
.btn-large {
  padding: $em-spacer-6 1.5em;
  font-size: inherit;
  line-height: $lh-default;

  // stylelint-disable-next-line primer/borders
  border-radius: 0.5em;
}

// Full-width button
//
// These buttons expand to the full width of their parent container
.btn-block {
  display: block;
  width: 100%;
  text-align: center;
}
